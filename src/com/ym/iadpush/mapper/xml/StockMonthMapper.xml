<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ym.iadpush.manage.mapper.StockMonthMapper">
	<resultMap id="BaseResultMap" type="com.ym.iadpush.manage.entity.StockMonth">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="month" jdbcType="VARCHAR" property="month" />
		<result column="warehouseId" jdbcType="INTEGER" property="warehouseId" />
		<result column="productId" jdbcType="INTEGER" property="productId" />
		<result column="startNumber" jdbcType="INTEGER" property="startNumber" />
		<result column="enterNumber" jdbcType="INTEGER" property="enterNumber" />
		<result column="outNumber" jdbcType="INTEGER" property="outNumber" />
		<result column="endNumber" jdbcType="INTEGER" property="endNumber" />
		<result column="proProperty" jdbcType="INTEGER" property="proProperty" />
		<result column="warehouseName" jdbcType="VARCHAR" property="warehouseName" />
		<result column="productName" jdbcType="VARCHAR" property="productName" />
	</resultMap>
	
	<resultMap id="stockMonthDataStatement" type="com.ym.iadpush.manage.entity.StockMonthDataStatement">
		<result column="enterNumber" property="enterNumber" jdbcType="DECIMAL" />
		<result column="outNumber" property="outNumber" jdbcType="DECIMAL" />
	</resultMap>
	
	<select id="queryStockMonthCollect" resultMap="stockMonthDataStatement"  parameterType="map">
		select  sum(enterNumber) enterNumber,sum(outNumber) outNumber  from stockmonth  sm
		left join product p on p.id=sm.productId
		left join warehouse w on w.id=sm.warehouseId
		where 1=1  
		
		<if test="companyId!=null and companyId!='' ">
			and w.companyId =#{companyId}
		</if>
		
		<if test="month!=null and month!='' ">
			and sm.month =#{month}
		</if>
		
		<if test="warehouse!=null and warehouse!='' ">
			and sm.warehouseId =#{warehouse}
		</if>
		
		<if test="product!=null and product!='' ">
			and sm.productId =#{product}
		</if>
	</select>
	
	<select id="queryStockMonthList" resultMap="BaseResultMap"
		parameterType="map">
		select  sm.*,p.name productName,w.name warehouseName,p.unit unit  from stockmonth  sm
		left join product p on p.id=sm.productId
		left join warehouse w on w.id=sm.warehouseId
		where 1=1  
		
		<if test="companyId!=null and companyId!='' ">
			and w.companyId =#{companyId}
		</if>
		
		<if test="month!=null and month!='' ">
			and sm.month =#{month}
		</if>
		
		<if test="warehouse!=null and warehouse!='' ">
			and sm.warehouseId =#{warehouse}
		</if>
		
		<if test="product!=null and product!='' ">
			and sm.productId =#{product}
		</if>
		
		order by sm.month,sm.warehouseId,sm.productId

	</select>
	
	
	<select id="queryStockMonthCount" parameterType="map" 	resultType="java.lang.Integer">
		select  count(1)  from stockmonth  sm
		left join product p on p.id=sm.productId
		left join warehouse w on w.id=sm.warehouseId
		where 1=1  
		
		<if test="companyId!=null and companyId!='' ">
			and w.companyId =#{companyId}
		</if>
		
		<if test="month!=null and month!='' ">
			and sm.month =#{month}
		</if>
		
		<if test="warehouse!=null and warehouse!='' ">
			and sm.warehouseId =#{warehouse}
		</if>
		
		<if test="product!=null and product!='' ">
			and sm.productId =#{product}
		</if>
	</select>
	
	<select id="getStockMonth" resultMap="BaseResultMap"
		parameterType="map">
		select  *  from stockmonth  sm 
		
		where sm.productId=#{productId,jdbcType=INTEGER} and sm.warehouseId=#{warehouseId,jdbcType=INTEGER}
		
		and sm.month=#{month,jdbcType=VARCHAR}  
		
		limit 0,1
	</select>
	
	<select id="getStockMonthByProductAndWarehouse" resultMap="BaseResultMap"
		parameterType="map">
		select  *  from stockmonth  sm 
		
		where sm.productId=#{productId,jdbcType=INTEGER} and sm.warehouseId=#{warehouseId,jdbcType=INTEGER}
		
		limit 0,1
	</select>
	
	
	<insert id="insertStockMonth" parameterType="com.ym.iadpush.manage.entity.StockMonth"
		keyProperty="id">
		insert  into  stockmonth (warehouseId,productId,month,startNumber,enterNumber,outNumber,endNumber )
		values(#{warehouseId},#{productId},#{month},#{startNumber},#{enterNumber},#{outNumber},#{endNumber} )
	</insert>
	
	<insert id="updateStockMonth">
		update stockmonth set 
		startNumber=#{stockMonth.startNumber,jdbcType=INTEGER},enterNumber=#{stockMonth.enterNumber,jdbcType=INTEGER},outNumber=#{stockMonth.outNumber,jdbcType=INTEGER},endNumber=#{stockMonth.endNumber,jdbcType=INTEGER}
		where id=#{id,jdbcType=INTEGER}
	</insert>
	

	
</mapper>