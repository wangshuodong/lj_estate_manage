<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ym.iadpush.manage.mapper.AddIcountMapper">
	<resultMap id="BaseResultMap" type="com.ym.iadpush.manage.entity.AddIcount">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="adate" property="adate" jdbcType="DATE" />
		<result column="hour" property="hour" jdbcType="SMALLINT" />
		<result column="developer_id" property="developerId" jdbcType="INTEGER" />
		<result column="icount" property="icount" jdbcType="INTEGER" />
		<result column="acount" property="acount" jdbcType="INTEGER" />
		<result column="cuid" property="cuid" jdbcType="INTEGER" />
		<result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
		<result column="appid" property="appid" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR"/>
		<result column="ousername" property="ousername" jdbcType="VARCHAR"/>
		<result column="appname" property="appname" jdbcType="VARCHAR"/>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, adate, hour, developer_id, icount, acount, cuid, createTime, appid
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.ym.iadpush.manage.entity.AddIcountExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from amount_compensation
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select 'true' as QUERYID,
		<include refid="Base_Column_List" />
		from amount_compensation
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from amount_compensation
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.ym.iadpush.manage.entity.AddIcountExample">
		delete from amount_compensation
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.ym.iadpush.manage.entity.AddIcount">
		insert into amount_compensation (id, adate, hour,
		developer_id, icount, acount,
		cuid, createTime, appid
		)
		values (#{id,jdbcType=INTEGER}, #{adate,jdbcType=DATE},
		#{hour,jdbcType=SMALLINT},
		#{developerId,jdbcType=INTEGER}, #{icount,jdbcType=INTEGER}, #{acount,jdbcType=INTEGER},
		#{cuid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
		#{appid,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.ym.iadpush.manage.entity.AddIcount">
		insert into amount_compensation
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="adate != null">
				adate,
			</if>
			<if test="hour != null">
				hour,
			</if>
			<if test="developerId != null">
				developer_id,
			</if>
			<if test="icount != null">
				icount,
			</if>
			<if test="acount != null">
				acount,
			</if>
			<if test="cuid != null">
				cuid,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="appid != null">
				appid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="adate != null">
				#{adate,jdbcType=DATE},
			</if>
			<if test="hour != null">
				#{hour,jdbcType=SMALLINT},
			</if>
			<if test="developerId != null">
				#{developerId,jdbcType=INTEGER},
			</if>
			<if test="icount != null">
				#{icount,jdbcType=INTEGER},
			</if>
			<if test="acount != null">
				#{acount,jdbcType=INTEGER},
			</if>
			<if test="cuid != null">
				#{cuid,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="appid != null">
				#{appid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.ym.iadpush.manage.entity.AddIcountExample"
		resultType="java.lang.Integer">
		select count(*) from amount_compensation
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update amount_compensation
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.adate != null">
				adate = #{record.adate,jdbcType=DATE},
			</if>
			<if test="record.hour != null">
				hour = #{record.hour,jdbcType=SMALLINT},
			</if>
			<if test="record.developerId != null">
				developer_id = #{record.developerId,jdbcType=INTEGER},
			</if>
			<if test="record.icount != null">
				icount = #{record.icount,jdbcType=INTEGER},
			</if>
			<if test="record.acount != null">
				acount = #{record.acount,jdbcType=INTEGER},
			</if>
			<if test="record.cuid != null">
				cuid = #{record.cuid,jdbcType=INTEGER},
			</if>
			<if test="record.createtime != null">
				createTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.appid != null">
				appid = #{record.appid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update amount_compensation
		set id = #{record.id,jdbcType=INTEGER},
		adate = #{record.adate,jdbcType=DATE},
		hour = #{record.hour,jdbcType=SMALLINT},
		developer_id = #{record.developerId,jdbcType=INTEGER},
		icount = #{record.icount,jdbcType=INTEGER},
		acount = #{record.acount,jdbcType=INTEGER},
		cuid = #{record.cuid,jdbcType=INTEGER},
		createTime = #{record.createtime,jdbcType=TIMESTAMP},
		appid = #{record.appid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.ym.iadpush.manage.entity.AddIcount">
		update amount_compensation
		<set>
			<if test="adate != null">
				adate = #{adate,jdbcType=DATE},
			</if>
			<if test="hour != null">
				hour = #{hour,jdbcType=SMALLINT},
			</if>
			<if test="developerId != null">
				developer_id = #{developerId,jdbcType=INTEGER},
			</if>
			<if test="icount != null">
				icount = #{icount,jdbcType=INTEGER},
			</if>
			<if test="acount != null">
				acount = #{acount,jdbcType=INTEGER},
			</if>
			<if test="cuid != null">
				cuid = #{cuid,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="appid != null">
				appid = #{appid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ym.iadpush.manage.entity.AddIcount">
		update amount_compensation
		set adate = #{adate,jdbcType=DATE},
		hour = #{hour,jdbcType=SMALLINT},
		developer_id = #{developerId,jdbcType=INTEGER},
		icount = #{icount,jdbcType=INTEGER},
		acount = #{acount,jdbcType=INTEGER},
		cuid = #{cuid,jdbcType=INTEGER},
		createTime = #{createtime,jdbcType=TIMESTAMP},
		appid = #{appid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="queryByOrder" resultMap="BaseResultMap"
		parameterType="map">
		SELECT
		a.*,u.username username,c.username ousername,ap.`name` appname
		FROM
			<include refid="queryByOrder_Sql"/>
		ORDER BY a.adate DESC LIMIT ${currPage*pageSize},#{pageSize}
	</select>
	<select id="countByOrder" resultType="java.lang.Integer" parameterType="map">
		select count(1) from <include refid="queryByOrder_Sql"/>
	</select>
	<sql id="queryByOrder_Sql">
		(select * from amount_compensation
		<where>
			<if test="startDate != null">
				AND  <![CDATA[adate >= #{startDate,jdbcType=DATE}]]>
			</if>
			<if test="endDate != null">
				AND  <![CDATA[adate <= #{endDate,jdbcType=DATE}]]>
			</if>
		</where>
		) a
		LEFT JOIN sys_users u ON u.user_id = a.developer_id
		LEFT JOIN sys_users c ON c.user_id = a.cuid
		LEFT JOIN app ap ON ap.id = a.appid
		<where>
			<if test="username != null ">
				AND u.username like CONCAT("%",#{username,jdbcType=VARCHAR},"%")
			</if>
			<if test="appname != null ">
				AND ap.name like CONCAT("%",#{appname,jdbcType=VARCHAR},"%")
			</if>
			<if test="cuname != null">
				AND c.username like CONCAT("%",#{cuname,jdbcType=VARCHAR},"%"),
			</if>
		</where>
	</sql>
</mapper>